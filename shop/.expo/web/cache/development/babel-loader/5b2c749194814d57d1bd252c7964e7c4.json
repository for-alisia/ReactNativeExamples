{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/alisia/Projects/ReactNative/shop/screens/admin/AdminProductsScreen.jsx\";\n\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FontAwesome, MaterialIcons } from '@expo/vector-icons';\nimport { ProductItem } from \"../../components/shop\";\nimport { SbHeaderButton, SbIconContainer, SbLoading, SbError } from \"../../components/ui\";\nimport theme from \"../../theme\";\nimport { deleteProduct, fetchProducts } from \"../../store/products.slice\";\n\nvar AdminProductsScreen = function AdminProductsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var products = useSelector(function (state) {\n    return state.products.availableProducts;\n  });\n  var isLoading = useSelector(function (state) {\n    return state.products.isLoading;\n  });\n  var error = useSelector(function (state) {\n    return state.products.error;\n  });\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(fetchProducts());\n  }, [dispatch]);\n  useEffect(function () {\n    var willFocusSub = navigation.addListener('willFocus', function () {\n      return dispatch(fetchProducts());\n    });\n    return function () {\n      willFocusSub.remove();\n    };\n  }, [dispatch]);\n\n  var deleteHandler = function deleteHandler(id) {\n    Alert.alert('Удаление продукта', 'Вы уверены, что хотите удалить продукт?', [{\n      text: 'Отмена',\n      style: 'default'\n    }, {\n      text: 'Удалить',\n      style: 'destructive',\n      onPress: function onPress() {\n        return dispatch(deleteProduct(id));\n      }\n    }]);\n  };\n\n  var editProductHandler = function editProductHandler(id) {\n    navigation.navigate('EditProduct', {\n      productId: id\n    });\n  };\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(ProductItem, {\n      item: item,\n      onSelect: editProductHandler.bind(null, item.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, React.createElement(SbIconContainer, {\n      onPress: deleteHandler.bind(null, item.id),\n      width: 32,\n      height: 24,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, React.createElement(FontAwesome, {\n      name: \"trash\",\n      size: 24,\n      color: theme.colors.primary,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    })), React.createElement(SbIconContainer, {\n      onPress: editProductHandler.bind(null, item.id),\n      width: 32,\n      height: 24,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, React.createElement(MaterialIcons, {\n      name: \"edit\",\n      size: 24,\n      color: theme.colors.primary,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  if (isLoading) return React.createElement(SbLoading, {\n    color: theme.colors.primary,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  });\n  if (error) return React.createElement(SbError, {\n    errorText: error,\n    buttonText: \"\\u041F\\u043E\\u043F\\u0440\\u043E\\u0431\\u043E\\u0432\\u0430\\u0442\\u044C \\u0441\\u043D\\u043E\\u0432\\u0430\",\n    buttonHandler: function buttonHandler() {\n      return dispatch(fetchProducts());\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: products,\n    renderItem: renderItem,\n    numColumns: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingVertical: theme.padding.s\n  }\n});\n\nAdminProductsScreen.navigationOptions = function (navData) {\n  return {\n    headerTitle: 'Редактирование товаров',\n    headerLeft: function headerLeft() {\n      return React.createElement(HeaderButtons, {\n        HeaderButtonComponent: SbHeaderButton,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }\n      }, React.createElement(Item, {\n        iconName: Platform.OS === 'android' ? 'md-menu' : 'ios-menu',\n        title: \"\\u041C\\u0435\\u043D\\u044E\",\n        onPress: function onPress() {\n          navData.navigation.toggleDrawer();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }));\n    },\n    headerRight: function headerRight() {\n      return React.createElement(HeaderButtons, {\n        HeaderButtonComponent: SbHeaderButton,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 7\n        }\n      }, React.createElement(Item, {\n        iconName: Platform.OS === 'android' ? 'md-create' : 'ios-create',\n        title: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\",\n        onPress: function onPress() {\n          navData.navigation.navigate('EditProduct');\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }\n      }));\n    }\n  };\n};\n\nexport default AdminProductsScreen;","map":{"version":3,"sources":["/Users/alisia/Projects/ReactNative/shop/screens/admin/AdminProductsScreen.jsx"],"names":["React","useEffect","HeaderButtons","Item","useSelector","useDispatch","FontAwesome","MaterialIcons","ProductItem","SbHeaderButton","SbIconContainer","SbLoading","SbError","theme","deleteProduct","fetchProducts","AdminProductsScreen","navigation","products","state","availableProducts","isLoading","error","dispatch","willFocusSub","addListener","remove","deleteHandler","id","Alert","alert","text","style","onPress","editProductHandler","navigate","productId","renderItem","item","bind","colors","primary","styles","container","StyleSheet","create","flex","paddingVertical","padding","s","navigationOptions","navData","headerTitle","headerLeft","Platform","OS","toggleDrawer","headerRight"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { View, StyleSheet, FlatList, Platform, Alert } from 'react-native';\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FontAwesome, MaterialIcons } from '@expo/vector-icons';\n\n// Components\nimport { ProductItem } from '../../components/shop';\nimport { SbHeaderButton, SbIconContainer, SbLoading, SbError } from '../../components/ui';\n\n// Theme\nimport theme from '../../theme';\n\n// Actions\nimport { deleteProduct, fetchProducts } from '../../store/products.slice';\n\nconst AdminProductsScreen = ({ navigation }) => {\n  // @ts-ignore\n  const products = useSelector((state) => state.products.availableProducts);\n  // @ts-ignore\n  const isLoading = useSelector((state) => state.products.isLoading);\n  // @ts-ignore\n  const error = useSelector((state) => state.products.error);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchProducts());\n  }, [dispatch]);\n\n  // Force to refetch products on each refresh\n  useEffect(() => {\n    const willFocusSub = navigation.addListener('willFocus', () => dispatch(fetchProducts()));\n\n    return () => {\n      willFocusSub.remove();\n    };\n  }, [dispatch]);\n\n  const deleteHandler = (id) => {\n    Alert.alert('Удаление продукта', 'Вы уверены, что хотите удалить продукт?', [\n      { text: 'Отмена', style: 'default' },\n      {\n        text: 'Удалить',\n        style: 'destructive',\n        onPress: () => dispatch(deleteProduct(id)),\n      },\n    ]);\n  };\n\n  const editProductHandler = (id) => {\n    navigation.navigate('EditProduct', { productId: id });\n  };\n\n  const renderItem = ({ item }) => {\n    return (\n      <ProductItem item={item} onSelect={editProductHandler.bind(null, item.id)}>\n        <SbIconContainer onPress={deleteHandler.bind(null, item.id)} width={32} height={24}>\n          <FontAwesome name=\"trash\" size={24} color={theme.colors.primary} />\n        </SbIconContainer>\n        <SbIconContainer onPress={editProductHandler.bind(null, item.id)} width={32} height={24}>\n          <MaterialIcons name=\"edit\" size={24} color={theme.colors.primary} />\n        </SbIconContainer>\n      </ProductItem>\n    );\n  };\n\n  if (isLoading) return <SbLoading color={theme.colors.primary} />;\n  if (error)\n    return (\n      <SbError\n        errorText={error}\n        buttonText=\"Попробовать снова\"\n        buttonHandler={() => dispatch(fetchProducts())}\n      />\n    );\n  return (\n    <View style={styles.container}>\n      <FlatList data={products} renderItem={renderItem} numColumns={2} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingVertical: theme.padding.s,\n  },\n});\n\nAdminProductsScreen.navigationOptions = (navData) => {\n  return {\n    headerTitle: 'Редактирование товаров',\n    headerLeft: () => (\n      <HeaderButtons HeaderButtonComponent={SbHeaderButton}>\n        <Item\n          iconName={Platform.OS === 'android' ? 'md-menu' : 'ios-menu'}\n          title=\"Меню\"\n          onPress={() => {\n            navData.navigation.toggleDrawer();\n          }}\n        />\n      </HeaderButtons>\n    ),\n    headerRight: () => (\n      <HeaderButtons HeaderButtonComponent={SbHeaderButton}>\n        <Item\n          iconName={Platform.OS === 'android' ? 'md-create' : 'ios-create'}\n          title=\"Добавить\"\n          onPress={() => {\n            navData.navigation.navigate('EditProduct');\n          }}\n        />\n      </HeaderButtons>\n    ),\n  };\n};\n\nexport default AdminProductsScreen;\n"]},"metadata":{},"sourceType":"module"}