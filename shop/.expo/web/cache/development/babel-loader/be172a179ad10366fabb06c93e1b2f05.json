{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/alisia/Projects/ReactNative/shop/screens/admin/EditProductScreen.jsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport { SbBottomButton, SbTitle, SbHeaderButton, SbInput, SbLoading } from \"../../components/ui\";\nimport theme from \"../../theme\";\nimport { createProduct, updateProduct } from \"../../store/products.slice\";\nimport { isLonger, isRequired } from \"../../utils/validators\";\nimport useInput from \"../../hooks/useInput\";\n\nvar EditProductScreen = function EditProductScreen(_ref) {\n  var navigation = _ref.navigation;\n  var productId = navigation.getParam('productId');\n  var product = useSelector(function (state) {\n    return state.products.availableProducts.find(function (item) {\n      return item.id === productId;\n    });\n  });\n  var isLoading = useSelector(function (state) {\n    return state.products.isLoading;\n  });\n  var error = useSelector(function (state) {\n    return state.products.error;\n  });\n  var isSuccessed = useSelector(function (state) {\n    return state.products.isSuccessed;\n  });\n  var dispatch = useDispatch();\n  var title = useInput(isLonger.bind(null, 5), product ? product.title : '');\n  var imageUrl = useInput(isRequired, product ? product.imageUrl : '');\n  var description = useInput(isLonger.bind(null, 10), product ? product.description : '');\n  var price = useInput(isRequired, product ? product.price.toString() : '');\n  var formIsValid = title.isValid && imageUrl.isValid && description.isValid && price.isValid;\n  var submitHandler = useCallback(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (formIsValid) {\n              _context.next = 3;\n              break;\n            }\n\n            Alert.alert('Проверьте данные', 'Некоторые поля формы заполнены некорректно, проверьте данные и попробуйте снова', [{\n              text: 'OK'\n            }]);\n            return _context.abrupt(\"return\");\n\n          case 3:\n            if (!productId) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(dispatch(updateProduct({\n              id: productId,\n              title: title.value,\n              description: description.value,\n              imageUrl: imageUrl.value,\n              price: price.value\n            })));\n\n          case 6:\n            _context.next = 10;\n            break;\n\n          case 8:\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(dispatch(createProduct({\n              title: title.value,\n              description: description.value,\n              imageUrl: imageUrl.value,\n              price: price.value\n            })));\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [productId, formIsValid, title.value, price.value, imageUrl.value, description.value]);\n  useEffect(function () {\n    navigation.setParams({\n      submit: submitHandler\n    });\n  }, [submitHandler]);\n  useEffect(function () {\n    if (error) {\n      Alert.alert('Произошла ошибка!', error, [{\n        text: 'OK'\n      }]);\n    }\n  }, [error]);\n  useEffect(function () {\n    if (isSuccessed && !error) {\n      navigation.goBack();\n    }\n  }, [error, isSuccessed]);\n  if (isLoading) return React.createElement(SbLoading, {\n    color: theme.colors.primary,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  });\n  return React.createElement(React.Fragment, null, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, React.createElement(SbInput, {\n    value: title.value,\n    errorText: \"\\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A \\u0434\\u043E\\u043B\\u0436\\u0435\\u043D \\u0441\\u043E\\u0434\\u0435\\u0440\\u0436\\u0430\\u0442\\u044C \\u043D\\u0435 \\u043C\\u0435\\u043D\\u0435\\u0435 5 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u043E\\u0432\",\n    label: \"\\u041D\\u0430\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\",\n    onChangeHandler: title.onChangeText,\n    onBlurHandler: title.onBlur,\n    hasError: title.hasError,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }), React.createElement(SbInput, {\n    value: imageUrl.value,\n    errorText: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0435 \\u0434\\u043E\\u043B\\u0436\\u043D\\u0430 \\u0431\\u044B\\u0442\\u044C \\u043F\\u0443\\u0441\\u0442\\u043E\\u0439\",\n    label: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435\",\n    hasError: imageUrl.hasError,\n    onBlurHandler: imageUrl.onBlur,\n    onChangeHandler: imageUrl.onChangeText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }), React.createElement(SbInput, {\n    value: description.value,\n    errorText: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435 (\\u043D\\u0435 \\u043C\\u0435\\u043D\\u0435\\u0435 10 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u043E\\u0432)\",\n    label: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\",\n    multiline: true,\n    numberOfLines: 8,\n    hasError: description.hasError,\n    onChangeHandler: description.onChangeText,\n    onBlurHandler: description.onBlur,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }), React.createElement(SbInput, {\n    value: price.value,\n    hasError: price.hasError,\n    errorText: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0446\\u0435\\u043D\\u0443\",\n    keyboardType: \"number-pad\",\n    label: \"\\u0426\\u0435\\u043D\\u0430\",\n    onBlurHandler: price.onBlur,\n    onChangeHandler: price.onChangeText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }))), React.createElement(SbBottomButton, {\n    onPress: submitHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.submitButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, React.createElement(SbTitle, {\n    style: styles.buttonTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"), React.createElement(MaterialIcons, {\n    name: \"save\",\n    size: 20,\n    color: theme.colors.light,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }))));\n};\n\nEditProductScreen.navigationOptions = function (navData) {\n  var submitHandler = navData.navigation.getParam('submit');\n  return {\n    headerTitle: navData.navigation.getParam('productId') ? 'Редактирование продукта' : 'Создание продукта',\n    headerRight: function headerRight() {\n      return React.createElement(HeaderButtons, {\n        HeaderButtonComponent: SbHeaderButton,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 7\n        }\n      }, React.createElement(Item, {\n        iconName: Platform.OS === 'android' ? 'md-checkmark' : 'ios-checkmark',\n        title: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n        onPress: submitHandler,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 9\n        }\n      }));\n    }\n  };\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingVertical: theme.padding.m,\n    paddingHorizontal: theme.padding.xl\n  },\n  submitButton: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  buttonTitle: {\n    color: theme.colors.light,\n    fontFamily: theme.fonts.montserratReg,\n    textTransform: 'uppercase',\n    marginRight: theme.margin.s\n  }\n});\nexport default EditProductScreen;","map":{"version":3,"sources":["/Users/alisia/Projects/ReactNative/shop/screens/admin/EditProductScreen.jsx"],"names":["React","useEffect","useCallback","MaterialIcons","useSelector","useDispatch","HeaderButtons","Item","SbBottomButton","SbTitle","SbHeaderButton","SbInput","SbLoading","theme","createProduct","updateProduct","isLonger","isRequired","useInput","EditProductScreen","navigation","productId","getParam","product","state","products","availableProducts","find","item","id","isLoading","error","isSuccessed","dispatch","title","bind","imageUrl","description","price","toString","formIsValid","isValid","submitHandler","Alert","alert","text","value","setParams","submit","goBack","colors","primary","styles","container","onChangeText","onBlur","hasError","submitButton","buttonTitle","light","navigationOptions","navData","headerTitle","headerRight","Platform","OS","StyleSheet","create","flex","paddingVertical","padding","m","paddingHorizontal","xl","flexDirection","alignItems","color","fontFamily","fonts","montserratReg","textTransform","marginRight","margin","s"],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport React, { useEffect, useCallback } from 'react';\nimport { View, StyleSheet, ScrollView, Platform, Alert } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\n\n// Components\nimport { SbBottomButton, SbTitle, SbHeaderButton, SbInput, SbLoading } from '../../components/ui';\n\n// Theme\nimport theme from '../../theme';\n\n// Actions\nimport { createProduct, updateProduct } from '../../store/products.slice';\n\n// Validators\nimport { isLonger, isRequired } from '../../utils/validators';\n\n// Hooks\nimport useInput from '../../hooks/useInput';\n\nconst EditProductScreen = ({ navigation }) => {\n  const productId = navigation.getParam('productId');\n  const product = useSelector(\n    // @ts-ignore\n    (state) => state.products.availableProducts.find((item) => item.id === productId)\n  );\n  // @ts-ignore\n  const isLoading = useSelector((state) => state.products.isLoading);\n  // @ts-ignore\n  const error = useSelector((state) => state.products.error);\n  // @ts-ignore\n  const isSuccessed = useSelector((state) => state.products.isSuccessed);\n  const dispatch = useDispatch();\n  // Inputs\n  const title = useInput(isLonger.bind(null, 5), product ? product.title : '');\n  const imageUrl = useInput(isRequired, product ? product.imageUrl : '');\n  const description = useInput(isLonger.bind(null, 10), product ? product.description : '');\n  const price = useInput(isRequired, product ? product.price.toString() : '');\n\n  const formIsValid = title.isValid && imageUrl.isValid && description.isValid && price.isValid;\n\n  const submitHandler = useCallback(async () => {\n    if (!formIsValid) {\n      Alert.alert(\n        'Проверьте данные',\n        'Некоторые поля формы заполнены некорректно, проверьте данные и попробуйте снова',\n        [{ text: 'OK' }]\n      );\n      return;\n    }\n    if (productId) {\n      await dispatch(\n        updateProduct({\n          id: productId,\n          title: title.value,\n          description: description.value,\n          imageUrl: imageUrl.value,\n          price: price.value,\n        })\n      );\n    } else {\n      await dispatch(\n        createProduct({\n          title: title.value,\n          description: description.value,\n          imageUrl: imageUrl.value,\n          price: price.value,\n        })\n      );\n    }\n  }, [productId, formIsValid, title.value, price.value, imageUrl.value, description.value]);\n\n  useEffect(() => {\n    navigation.setParams({ submit: submitHandler });\n  }, [submitHandler]);\n\n  useEffect(() => {\n    if (error) {\n      Alert.alert('Произошла ошибка!', error, [{ text: 'OK' }]);\n    }\n  }, [error]);\n\n  useEffect(() => {\n    if (isSuccessed && !error) {\n      navigation.goBack();\n    }\n  }, [error, isSuccessed]);\n\n  if (isLoading) return <SbLoading color={theme.colors.primary} />;\n\n  return (\n    <>\n      <ScrollView>\n        <View style={styles.container}>\n          <SbInput\n            value={title.value}\n            errorText=\"Заголовок должен содержать не менее 5 символов\"\n            label=\"Наименование\"\n            onChangeHandler={title.onChangeText}\n            onBlurHandler={title.onBlur}\n            hasError={title.hasError}\n          />\n          <SbInput\n            value={imageUrl.value}\n            errorText=\"Ссылка не должна быть пустой\"\n            label=\"Ссылка на изображение\"\n            hasError={imageUrl.hasError}\n            onBlurHandler={imageUrl.onBlur}\n            onChangeHandler={imageUrl.onChangeText}\n          />\n          <SbInput\n            value={description.value}\n            errorText=\"Введите описание (не менее 10 символов)\"\n            label=\"Описание\"\n            multiline\n            numberOfLines={8}\n            hasError={description.hasError}\n            onChangeHandler={description.onChangeText}\n            onBlurHandler={description.onBlur}\n          />\n          <SbInput\n            value={price.value}\n            hasError={price.hasError}\n            errorText=\"Введите цену\"\n            keyboardType=\"number-pad\"\n            label=\"Цена\"\n            onBlurHandler={price.onBlur}\n            onChangeHandler={price.onChangeText}\n          />\n        </View>\n      </ScrollView>\n\n      <SbBottomButton onPress={submitHandler}>\n        <View style={styles.submitButton}>\n          <SbTitle style={styles.buttonTitle}>Сохранить</SbTitle>\n          <MaterialIcons name=\"save\" size={20} color={theme.colors.light} />\n        </View>\n      </SbBottomButton>\n    </>\n  );\n};\n\nEditProductScreen.navigationOptions = (navData) => {\n  const submitHandler = navData.navigation.getParam('submit');\n  return {\n    headerTitle: navData.navigation.getParam('productId')\n      ? 'Редактирование продукта'\n      : 'Создание продукта',\n    headerRight: () => (\n      <HeaderButtons HeaderButtonComponent={SbHeaderButton}>\n        <Item\n          iconName={Platform.OS === 'android' ? 'md-checkmark' : 'ios-checkmark'}\n          title=\"Сохранить\"\n          onPress={submitHandler}\n        />\n      </HeaderButtons>\n    ),\n  };\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingVertical: theme.padding.m,\n    paddingHorizontal: theme.padding.xl,\n  },\n\n  submitButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  buttonTitle: {\n    color: theme.colors.light,\n    fontFamily: theme.fonts.montserratReg,\n    textTransform: 'uppercase',\n    marginRight: theme.margin.s,\n  },\n});\n\nexport default EditProductScreen;\n"]},"metadata":{},"sourceType":"module"}