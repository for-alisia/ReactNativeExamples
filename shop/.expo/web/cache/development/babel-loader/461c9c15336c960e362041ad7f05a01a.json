{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"errorText\", \"label\", \"hasError\", \"value\", \"onChangeHandler\", \"onBlurHandler\"];\n\nvar _this = this,\n    _jsxFileName = \"/Users/alisia/Projects/ReactNative/shop/components/ui/SbInput.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport useInput from \"../../hooks/useInput\";\nimport SbText from \"./SbText\";\nimport theme from \"../../theme\";\n\nvar SbInput = function SbInput(_ref) {\n  var errorText = _ref.errorText,\n      label = _ref.label,\n      hasError = _ref.hasError,\n      value = _ref.value,\n      onChangeHandler = _ref.onChangeHandler,\n      onBlurHandler = _ref.onBlurHandler,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return React.createElement(View, {\n    style: styles.formControl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(SbText, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, label, \":\"), React.createElement(TextInput, _extends({}, props, {\n    style: _objectSpread(_objectSpread({}, styles.input), {}, {\n      borderColor: hasError ? theme.colors.accent : theme.colors.secondary,\n      height: props.multiline ? +props.numberOfLines * 10 : 40\n    }),\n    value: value,\n    onChangeText: onChangeHandler,\n    onBlur: onBlurHandler,\n    returnKeyType: \"next\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  })), hasError && React.createElement(SbText, {\n    style: styles.errorText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 20\n    }\n  }, errorText));\n};\n\nvar styles = StyleSheet.create({\n  formControl: {\n    width: '100%',\n    marginVertical: theme.margin.m\n  },\n  label: {\n    fontFamily: theme.fonts.playfair,\n    color: theme.colors.grey\n  },\n  input: {\n    paddingHorizontal: theme.padding.xs,\n    borderBottomWidth: 1,\n    color: theme.colors.dark,\n    height: 40\n  },\n  errorText: {\n    color: theme.colors.accent,\n    fontSize: theme.fontSize.xs\n  }\n});\nexport default SbInput;","map":{"version":3,"sources":["/Users/alisia/Projects/ReactNative/shop/components/ui/SbInput.jsx"],"names":["React","useEffect","useInput","SbText","theme","SbInput","errorText","label","hasError","value","onChangeHandler","onBlurHandler","props","styles","formControl","input","borderColor","colors","accent","secondary","height","multiline","numberOfLines","StyleSheet","create","width","marginVertical","margin","m","fontFamily","fonts","playfair","color","grey","paddingHorizontal","padding","xs","borderBottomWidth","dark","fontSize"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAIA,OAAOC,QAAP;AAGA,OAAOC,MAAP;AAGA,OAAOC,KAAP;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAQV;AAAA,MAPJC,SAOI,QAPJA,SAOI;AAAA,MANJC,KAMI,QANJA,KAMI;AAAA,MALJC,QAKI,QALJA,QAKI;AAAA,MAJJC,KAII,QAJJA,KAII;AAAA,MAHJC,eAGI,QAHJA,eAGI;AAAA,MAFJC,aAEI,QAFJA,aAEI;AAAA,MADDC,KACC;;AACJ,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAED,MAAM,CAACN,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BA,KAA9B,MADF,EAEE,oBAAC,SAAD,eACMK,KADN;AAEE,IAAA,KAAK,kCACAC,MAAM,CAACE,KADP;AAEHC,MAAAA,WAAW,EAAER,QAAQ,GAAGJ,KAAK,CAACa,MAAN,CAAaC,MAAhB,GAAyBd,KAAK,CAACa,MAAN,CAAaE,SAFxD;AAGHC,MAAAA,MAAM,EAAER,KAAK,CAACS,SAAN,GAAkB,CAACT,KAAK,CAACU,aAAP,GAAuB,EAAzC,GAA8C;AAHnD,MAFP;AAOE,IAAA,KAAK,EAAEb,KAPT;AAQE,IAAA,YAAY,EAAEC,eARhB;AASE,IAAA,MAAM,EAAEC,aATV;AAUE,IAAA,aAAa,EAAC,MAVhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAcGH,QAAQ,IAAI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEK,MAAM,CAACP,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCA,SAAlC,CAdf,CADF;AAkBD,CA3BD;;AA6BA,IAAMO,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,WAAW,EAAE;AACXW,IAAAA,KAAK,EAAE,MADI;AAEXC,IAAAA,cAAc,EAAEtB,KAAK,CAACuB,MAAN,CAAaC;AAFlB,GADkB;AAK/BrB,EAAAA,KAAK,EAAE;AACLsB,IAAAA,UAAU,EAAEzB,KAAK,CAAC0B,KAAN,CAAYC,QADnB;AAELC,IAAAA,KAAK,EAAE5B,KAAK,CAACa,MAAN,CAAagB;AAFf,GALwB;AAS/BlB,EAAAA,KAAK,EAAE;AACLmB,IAAAA,iBAAiB,EAAE9B,KAAK,CAAC+B,OAAN,CAAcC,EAD5B;AAELC,IAAAA,iBAAiB,EAAE,CAFd;AAGLL,IAAAA,KAAK,EAAE5B,KAAK,CAACa,MAAN,CAAaqB,IAHf;AAILlB,IAAAA,MAAM,EAAE;AAJH,GATwB;AAe/Bd,EAAAA,SAAS,EAAE;AACT0B,IAAAA,KAAK,EAAE5B,KAAK,CAACa,MAAN,CAAaC,MADX;AAETqB,IAAAA,QAAQ,EAAEnC,KAAK,CAACmC,QAAN,CAAeH;AAFhB;AAfoB,CAAlB,CAAf;AAqBA,eAAe/B,OAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { View, StyleSheet, TextInput } from 'react-native';\n\n// Hooks\nimport useInput from '../../hooks/useInput';\n\n// Components\nimport SbText from './SbText';\n\n// Theme\nimport theme from '../../theme';\n\nconst SbInput = ({\n  errorText,\n  label,\n  hasError,\n  value,\n  onChangeHandler,\n  onBlurHandler,\n  ...props\n}) => {\n  return (\n    <View style={styles.formControl}>\n      <SbText style={styles.label}>{label}:</SbText>\n      <TextInput\n        {...props}\n        style={{\n          ...styles.input,\n          borderColor: hasError ? theme.colors.accent : theme.colors.secondary,\n          height: props.multiline ? +props.numberOfLines * 10 : 40,\n        }}\n        value={value}\n        onChangeText={onChangeHandler}\n        onBlur={onBlurHandler}\n        returnKeyType=\"next\"\n      />\n      {hasError && <SbText style={styles.errorText}>{errorText}</SbText>}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  formControl: {\n    width: '100%',\n    marginVertical: theme.margin.m,\n  },\n  label: {\n    fontFamily: theme.fonts.playfair,\n    color: theme.colors.grey,\n  },\n  input: {\n    paddingHorizontal: theme.padding.xs,\n    borderBottomWidth: 1,\n    color: theme.colors.dark,\n    height: 40,\n  },\n  errorText: {\n    color: theme.colors.accent,\n    fontSize: theme.fontSize.xs,\n  },\n});\n\nexport default SbInput;\n"]},"metadata":{},"sourceType":"module"}