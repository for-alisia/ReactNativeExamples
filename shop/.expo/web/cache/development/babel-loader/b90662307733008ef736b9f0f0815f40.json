{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\n\nvar useInput = function useInput(validator, initialVal) {\n  var _useState = useState(initialVal ? initialVal : ''),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isTouched = _useState4[0],\n      setIsTouched = _useState4[1];\n\n  var isValid = validator(value);\n  var hasError = !isValid && isTouched;\n\n  var onChangeText = function onChangeText(text) {\n    setValue(text);\n  };\n\n  var onBlur = function onBlur() {\n    setIsTouched(true);\n  };\n\n  var reset = function reset() {\n    setValue(initialVal ? initialVal : '');\n    setIsTouched(false);\n  };\n\n  return {\n    value: value,\n    isValid: isValid,\n    hasError: hasError,\n    onChangeText: onChangeText,\n    onBlur: onBlur,\n    reset: reset\n  };\n};\n\nexport default useInput;","map":{"version":3,"sources":["/Users/alisia/Projects/ReactNative/shop/hooks/useInput.js"],"names":["useState","useInput","validator","initialVal","value","setValue","isTouched","setIsTouched","isValid","hasError","onChangeText","text","onBlur","reset"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,SAAD,EAAYC,UAAZ,EAA2B;AAC1C,kBAA0BH,QAAQ,CAACG,UAAU,GAAGA,UAAH,GAAgB,EAA3B,CAAlC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAkCL,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOM,SAAP;AAAA,MAAkBC,YAAlB;;AAEA,MAAMC,OAAO,GAAGN,SAAS,CAACE,KAAD,CAAzB;AACA,MAAMK,QAAQ,GAAG,CAACD,OAAD,IAAYF,SAA7B;;AAEA,MAAMI,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AAC7BN,IAAAA,QAAQ,CAACM,IAAD,CAAR;AACD,GAFD;;AAIA,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnBL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAIA,MAAMM,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClBR,IAAAA,QAAQ,CAACF,UAAU,GAAGA,UAAH,GAAgB,EAA3B,CAAR;AACAI,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAHD;;AAKA,SAAO;AAAEH,IAAAA,KAAK,EAALA,KAAF;AAASI,IAAAA,OAAO,EAAPA,OAAT;AAAkBC,IAAAA,QAAQ,EAARA,QAAlB;AAA4BC,IAAAA,YAAY,EAAZA,YAA5B;AAA0CE,IAAAA,MAAM,EAANA,MAA1C;AAAkDC,IAAAA,KAAK,EAALA;AAAlD,GAAP;AACD,CArBD;;AAuBA,eAAeZ,QAAf","sourcesContent":["import { useState } from 'react';\n\nconst useInput = (validator, initialVal) => {\n  const [value, setValue] = useState(initialVal ? initialVal : '');\n  const [isTouched, setIsTouched] = useState(false);\n\n  const isValid = validator(value);\n  const hasError = !isValid && isTouched;\n\n  const onChangeText = (text) => {\n    setValue(text);\n  };\n\n  const onBlur = () => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setValue(initialVal ? initialVal : '');\n    setIsTouched(false);\n  };\n\n  return { value, isValid, hasError, onChangeText, onBlur, reset };\n};\n\nexport default useInput;\n"]},"metadata":{},"sourceType":"module"}