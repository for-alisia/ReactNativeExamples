{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/alisia/Projects/ReactNative/shop/screens/shop/ProductsOverviewScreen.jsx\";\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport { FontAwesome, MaterialIcons } from '@expo/vector-icons';\nimport { ProductItem } from \"../../components/shop\";\nimport { SbHeaderButton, SbIconContainer, SbLoading, SbError } from \"../../components/ui\";\nimport theme from \"../../theme\";\nimport { cartActions } from \"../../store/cart.slice\";\nimport { fetchProducts } from \"../../store/products.slice\";\n\nvar ProductsOverviewScreen = function ProductsOverviewScreen(props) {\n  var navigation = props.navigation;\n  var products = useSelector(function (state) {\n    return state.products.availableProducts;\n  });\n  var isLoading = useSelector(function (state) {\n    return state.products.isLoading;\n  });\n  var error = useSelector(function (state) {\n    return state.products.error;\n  });\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(fetchProducts());\n  }, [dispatch]);\n  useEffect(function () {\n    var willFocusSub = props.navigation.addListener('willFocus', function () {\n      return dispatch(fetchProducts());\n    });\n    return function () {\n      willFocusSub.remove();\n    };\n  }, [dispatch]);\n\n  var renderItem = function renderItem(itemData) {\n    var item = itemData.item;\n    return React.createElement(ProductItem, {\n      item: item,\n      onSelect: function onSelect() {\n        navigation.navigate('ProductDetail', {\n          productId: item.id,\n          productTitle: item.title\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, React.createElement(SbIconContainer, {\n      onPress: function onPress() {\n        return console.log('Added to favourite!');\n      },\n      width: 32,\n      height: 24,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, React.createElement(FontAwesome, {\n      name: \"heart-o\",\n      size: 24,\n      color: theme.colors.primary,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    })), React.createElement(SbIconContainer, {\n      onPress: function onPress() {\n        dispatch(cartActions.addToCart(item));\n      },\n      width: 32,\n      height: 24,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, React.createElement(MaterialIcons, {\n      name: \"add-shopping-cart\",\n      size: 24,\n      color: theme.colors.primary,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  if (isLoading) return React.createElement(SbLoading, {\n    color: theme.colors.primary,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  });\n\n  if (error) {\n    return React.createElement(SbError, {\n      errorText: error,\n      buttonText: \"\\u041F\\u043E\\u043F\\u0440\\u043E\\u0431\\u043E\\u0432\\u0430\\u0442\\u044C \\u0441\\u043D\\u043E\\u0432\\u0430\",\n      buttonHandler: function buttonHandler() {\n        return dispatch(fetchProducts());\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: products,\n    renderItem: renderItem,\n    numColumns: 2,\n    refreshing: isLoading,\n    onRefresh: function onRefresh() {\n      return dispatch(fetchProducts());\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }));\n};\n\nProductsOverviewScreen.navigationOptions = function (navData) {\n  return {\n    headerTitle: 'Все товары',\n    headerLeft: function headerLeft() {\n      return React.createElement(HeaderButtons, {\n        HeaderButtonComponent: SbHeaderButton,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 5\n        }\n      }, React.createElement(Item, {\n        iconName: Platform.OS === 'android' ? 'md-menu' : 'ios-menu',\n        title: \"\\u041C\\u0435\\u043D\\u044E\",\n        onPress: function onPress() {\n          navData.navigation.toggleDrawer();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }\n      }));\n    },\n    headerRight: function headerRight() {\n      return React.createElement(HeaderButtons, {\n        HeaderButtonComponent: SbHeaderButton,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 5\n        }\n      }, React.createElement(Item, {\n        iconName: Platform.OS === 'android' ? 'md-cart' : 'ios-cart',\n        title: \"\\u041A\\u043E\\u0440\\u0437\\u0438\\u043D\\u0430\",\n        onPress: function onPress() {\n          navData.navigation.navigate('Cart');\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 7\n        }\n      }));\n    }\n  };\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: theme.padding.s,\n    paddingVertical: theme.padding.s\n  }\n});\nexport default ProductsOverviewScreen;","map":{"version":3,"sources":["/Users/alisia/Projects/ReactNative/shop/screens/shop/ProductsOverviewScreen.jsx"],"names":["React","useEffect","useState","useCallback","useSelector","useDispatch","HeaderButtons","Item","FontAwesome","MaterialIcons","ProductItem","SbHeaderButton","SbIconContainer","SbLoading","SbError","theme","cartActions","fetchProducts","ProductsOverviewScreen","props","navigation","products","state","availableProducts","isLoading","error","dispatch","willFocusSub","addListener","remove","renderItem","itemData","item","navigate","productId","id","productTitle","title","console","log","colors","primary","addToCart","styles","container","navigationOptions","navData","headerTitle","headerLeft","Platform","OS","toggleDrawer","headerRight","StyleSheet","create","paddingHorizontal","padding","s","paddingVertical"],"mappings":"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","sourcesContent":["// Dependencies\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { FlatList, StyleSheet, View, Platform } from 'react-native';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport { FontAwesome, MaterialIcons } from '@expo/vector-icons';\n\n// Components\nimport { ProductItem } from '../../components/shop';\nimport { SbHeaderButton, SbIconContainer, SbLoading, SbError } from '../../components/ui';\n\n// Theme\nimport theme from '../../theme';\n\n// Actions\nimport { cartActions } from '../../store/cart.slice';\nimport { fetchProducts } from '../../store/products.slice';\n\nconst ProductsOverviewScreen = (props) => {\n  const { navigation } = props;\n\n  // @ts-ignore\n  const products = useSelector((state) => state.products.availableProducts);\n  // @ts-ignore\n  const isLoading = useSelector((state) => state.products.isLoading);\n  // @ts-ignore\n  const error = useSelector((state) => state.products.error);\n\n  const dispatch = useDispatch();\n\n  // Fetch products initially\n  useEffect(() => {\n    dispatch(fetchProducts());\n  }, [dispatch]);\n\n  // Refetch products on every return to this screen\n  useEffect(() => {\n    const willFocusSub = props.navigation.addListener('willFocus', () => dispatch(fetchProducts()));\n\n    return () => {\n      willFocusSub.remove();\n    };\n  }, [dispatch]);\n\n  const renderItem = (itemData) => {\n    const { item } = itemData;\n    return (\n      <ProductItem\n        item={item}\n        onSelect={() => {\n          navigation.navigate('ProductDetail', { productId: item.id, productTitle: item.title });\n        }}\n      >\n        <SbIconContainer onPress={() => console.log('Added to favourite!')} width={32} height={24}>\n          <FontAwesome name=\"heart-o\" size={24} color={theme.colors.primary} />\n        </SbIconContainer>\n        <SbIconContainer\n          onPress={() => {\n            dispatch(cartActions.addToCart(item));\n          }}\n          width={32}\n          height={24}\n        >\n          <MaterialIcons name=\"add-shopping-cart\" size={24} color={theme.colors.primary} />\n        </SbIconContainer>\n      </ProductItem>\n    );\n  };\n\n  if (isLoading) return <SbLoading color={theme.colors.primary} />;\n  if (error) {\n    return (\n      <SbError\n        // @ts-ignore\n        errorText={error}\n        buttonText=\"Попробовать снова\"\n        buttonHandler={() => dispatch(fetchProducts())}\n      />\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <FlatList\n        data={products}\n        renderItem={renderItem}\n        numColumns={2}\n        refreshing={isLoading}\n        onRefresh={() => dispatch(fetchProducts())}\n      />\n    </View>\n  );\n};\n\nProductsOverviewScreen.navigationOptions = (navData) => ({\n  headerTitle: 'Все товары',\n  headerLeft: () => (\n    <HeaderButtons HeaderButtonComponent={SbHeaderButton}>\n      <Item\n        iconName={Platform.OS === 'android' ? 'md-menu' : 'ios-menu'}\n        title=\"Меню\"\n        onPress={() => {\n          navData.navigation.toggleDrawer();\n        }}\n      />\n    </HeaderButtons>\n  ),\n  headerRight: () => (\n    <HeaderButtons HeaderButtonComponent={SbHeaderButton}>\n      <Item\n        iconName={Platform.OS === 'android' ? 'md-cart' : 'ios-cart'}\n        title=\"Корзина\"\n        onPress={() => {\n          navData.navigation.navigate('Cart');\n        }}\n      />\n    </HeaderButtons>\n  ),\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: theme.padding.s,\n    paddingVertical: theme.padding.s,\n  },\n});\n\nexport default ProductsOverviewScreen;\n"]},"metadata":{},"sourceType":"module"}