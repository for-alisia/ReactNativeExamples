{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/alisia/Projects/ReactNative/shop/components/ui/SbButton.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SbText from \"./SbText\";\nimport SbTouchable from \"./SbTouchable\";\nimport theme from \"../../theme\";\n\nvar SbButton = function SbButton(props) {\n  var children = props.children,\n      onPress = props.onPress,\n      type = props.type,\n      style = props.style,\n      disabled = props.disabled;\n  var typeStyles = type || 'solid';\n  var textStyles = typeStyles === 'solid' ? 'textSolid' : 'textOutlined';\n  return React.createElement(SbTouchable, {\n    onPress: !disabled ? onPress : function () {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    testID: \"btn-container\",\n    style: _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, styles.container), styles[typeStyles]), style), {}, {\n      opacity: disabled ? 0.68 : 1\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, React.createElement(SbText, {\n    style: _objectSpread(_objectSpread({}, styles.text), styles[textStyles]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, children)));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    paddingVertical: theme.padding.s,\n    paddingHorizontal: theme.padding.xl,\n    borderRadius: theme.borderRadius.l,\n    alignSelf: 'center'\n  },\n  solid: {\n    backgroundColor: theme.colors.primary\n  },\n  outline: {\n    backgroundColor: 'transparent',\n    borderColor: theme.colors.primary,\n    borderWidth: 1\n  },\n  text: {\n    textTransform: 'uppercase',\n    fontSize: theme.fontSize.s,\n    textAlign: 'center'\n  },\n  textSolid: {\n    color: theme.colors.light\n  },\n  textOutlined: {\n    color: theme.colors.primary\n  }\n});\nexport default SbButton;","map":{"version":3,"sources":["/Users/alisia/Projects/ReactNative/shop/components/ui/SbButton.jsx"],"names":["React","SbText","SbTouchable","theme","SbButton","props","children","onPress","type","style","disabled","typeStyles","textStyles","styles","container","opacity","text","StyleSheet","create","paddingVertical","padding","s","paddingHorizontal","xl","borderRadius","l","alignSelf","solid","backgroundColor","colors","primary","outline","borderColor","borderWidth","textTransform","fontSize","textAlign","textSolid","color","light","textOutlined"],"mappings":";;;;;;;;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;;;AAIA,OAAOC,MAAP;AACA,OAAOC,WAAP;AAGA,OAAOC,KAAP;;AAIA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAC1B,MAAQC,QAAR,GAAqDD,KAArD,CAAQC,QAAR;AAAA,MAAkBC,OAAlB,GAAqDF,KAArD,CAAkBE,OAAlB;AAAA,MAA2BC,IAA3B,GAAqDH,KAArD,CAA2BG,IAA3B;AAAA,MAAiCC,KAAjC,GAAqDJ,KAArD,CAAiCI,KAAjC;AAAA,MAAwCC,QAAxC,GAAqDL,KAArD,CAAwCK,QAAxC;AAEA,MAAMC,UAAU,GAAGH,IAAI,IAAI,OAA3B;AACA,MAAMI,UAAU,GAAGD,UAAU,KAAK,OAAf,GAAyB,WAAzB,GAAuC,cAA1D;AAEA,SACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAE,CAACD,QAAD,GAAYH,OAAZ,GAAsB,YAAM,CAAE,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,MAAM,EAAC,eADT;AAEE,IAAA,KAAK,8DACAM,MAAM,CAACC,SADP,GAEAD,MAAM,CAACF,UAAD,CAFN,GAGAF,KAHA;AAIHM,MAAAA,OAAO,EAAEL,QAAQ,GAAG,IAAH,GAAU;AAJxB,MAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,oBAAC,MAAD;AAAQ,IAAA,KAAK,kCAAOG,MAAM,CAACG,IAAd,GAAuBH,MAAM,CAACD,UAAD,CAA7B,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2DN,QAA3D,CATF,CADF,CADF;AAeD,CArBD;;AAuBA,IAAMO,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,eAAe,EAAEhB,KAAK,CAACiB,OAAN,CAAcC,CADtB;AAETC,IAAAA,iBAAiB,EAAEnB,KAAK,CAACiB,OAAN,CAAcG,EAFxB;AAGTC,IAAAA,YAAY,EAAErB,KAAK,CAACqB,YAAN,CAAmBC,CAHxB;AAITC,IAAAA,SAAS,EAAE;AAJF,GADoB;AAO/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,eAAe,EAAEzB,KAAK,CAAC0B,MAAN,CAAaC;AADzB,GAPwB;AAU/BC,EAAAA,OAAO,EAAE;AACPH,IAAAA,eAAe,EAAE,aADV;AAEPI,IAAAA,WAAW,EAAE7B,KAAK,CAAC0B,MAAN,CAAaC,OAFnB;AAGPG,IAAAA,WAAW,EAAE;AAHN,GAVsB;AAe/BjB,EAAAA,IAAI,EAAE;AACJkB,IAAAA,aAAa,EAAE,WADX;AAEJC,IAAAA,QAAQ,EAAEhC,KAAK,CAACgC,QAAN,CAAed,CAFrB;AAGJe,IAAAA,SAAS,EAAE;AAHP,GAfyB;AAoB/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAAEnC,KAAK,CAAC0B,MAAN,CAAaU;AADX,GApBoB;AAuB/BC,EAAAA,YAAY,EAAE;AACZF,IAAAA,KAAK,EAAEnC,KAAK,CAAC0B,MAAN,CAAaC;AADR;AAvBiB,CAAlB,CAAf;AA4BA,eAAe1B,QAAf","sourcesContent":["// @ts-nocheck\n// Dependencies\nimport React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\n// Components\nimport SbText from './SbText';\nimport SbTouchable from './SbTouchable';\n\n// Theme\nimport theme from '../../theme';\n\n// Supportes types: 'solid' and 'outline'\n\nconst SbButton = (props) => {\n  const { children, onPress, type, style, disabled } = props;\n\n  const typeStyles = type || 'solid';\n  const textStyles = typeStyles === 'solid' ? 'textSolid' : 'textOutlined';\n\n  return (\n    <SbTouchable onPress={!disabled ? onPress : () => {}}>\n      <View\n        testID=\"btn-container\"\n        style={{\n          ...styles.container,\n          ...styles[typeStyles],\n          ...style,\n          opacity: disabled ? 0.68 : 1,\n        }}\n      >\n        <SbText style={{ ...styles.text, ...styles[textStyles] }}>{children}</SbText>\n      </View>\n    </SbTouchable>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: theme.padding.s,\n    paddingHorizontal: theme.padding.xl,\n    borderRadius: theme.borderRadius.l,\n    alignSelf: 'center',\n  },\n  solid: {\n    backgroundColor: theme.colors.primary,\n  },\n  outline: {\n    backgroundColor: 'transparent',\n    borderColor: theme.colors.primary,\n    borderWidth: 1,\n  },\n  text: {\n    textTransform: 'uppercase',\n    fontSize: theme.fontSize.s,\n    textAlign: 'center',\n  },\n  textSolid: {\n    color: theme.colors.light,\n  },\n  textOutlined: {\n    color: theme.colors.primary,\n  },\n});\n\nexport default SbButton;\n"]},"metadata":{},"sourceType":"module"}